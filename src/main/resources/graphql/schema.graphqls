type Player {
    id: ID!
    username: String!
    online: Boolean!
}

type Room {
    id: ID!
    name: String!
    owner: Player!
    challenger: Player
    gameState: GameState
}

type GameState {
    id: ID!
    boardState: [[Int!]]!
    isBlackMove: Boolean!
    blackPlayer: Player
    whitePlayer: Player
    room: Room
}

type ChatMessage {
    id: ID!
    room: Room
    player: Player
    message: String!
    timestamp: String!
}

type Mutation {
    createPlayer(username:String!, password:String!): Player
    createRoom(name:String!, ownerId:ID!): Room
    joinRoom(roomId: ID!, playerId: ID!): Room
    login(username:String!, password:String!): Player
    startGame(roomId: ID!): Boolean
    createGame: GameState
}

type Query {
    getGameState(roomId: ID!): GameState
}
